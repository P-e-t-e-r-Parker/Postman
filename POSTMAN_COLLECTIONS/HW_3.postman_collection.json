{
	"info": {
		"_postman_id": "2646a31a-734b-45ec-ac20-529f3dfa07e2",
		"name": "HW_3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18990780"
	},
	"item": [
		{
			"name": "http://162.55.220.72:5005/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonDataResponse = pm.response.json();\r",
							"pm.test(\"test token\", function () {\r",
							"    pm.environment.set('token', jsonDataResponse.token);\r",
							"});\r",
							"\r",
							"// 1) необходимо залогиниться\r",
							"// POST\r",
							"// http://162.55.220.72:5005/login\r",
							"// login : str (кроме /)\r",
							"// password : str\r",
							"\r",
							"// Приходящий токен необходимо передать во все остальные запросы.\r",
							"\r",
							"// ===================\r",
							"// дальше все запросы требуют наличие токена.\r",
							"// ===================\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/login?name=Peter&password=Fdfgkjg89437",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					],
					"query": [
						{
							"key": "name",
							"value": "Peter"
						},
						{
							"key": "password",
							"value": "Fdfgkjg89437"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonDataResponse = pm.response.json();\r",
							"var jsonDataRequest = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"pm.test(\"TEST Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var schema ={\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"person\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"u_age\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"u_name\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"u_salary_1_5_year\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"u_age\",\r",
							"        \"u_name\",\r",
							"        \"u_salary_1_5_year\"\r",
							"      ]\r",
							"    },\r",
							"    \"qa_salary_after_12_months\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"qa_salary_after_6_months\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"start_qa_salary\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"person\",\r",
							"    \"qa_salary_after_12_months\",\r",
							"    \"qa_salary_after_6_months\",\r",
							"    \"start_qa_salary\"\r",
							"  ]\r",
							"};\r",
							"\r",
							"pm.test('schema is valid', function () {\r",
							"    pm.expect(tv4.validate(jsonDataResponse, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test('multiplication check x2', function () {\r",
							"    var salary = jsonDataResponse.start_qa_salary;\r",
							"    pm.expect(jsonDataResponse.qa_salary_after_6_months).to.eql(jsonDataRequest.salary*2);\r",
							"});\r",
							"pm.test('multiplication check x2.9', function () {\r",
							"    var salary = jsonDataResponse.start_qa_salary;\r",
							"    pm.expect(jsonDataResponse.qa_salary_after_12_months).to.eql(jsonDataRequest.salary*2.9);\r",
							"});\r",
							"pm.test('multiplication check x4', function () {\r",
							"    var salary = jsonDataResponse.start_qa_salary;\r",
							"    pm.expect(jsonDataResponse.person.u_salary_1_5_year).to.eql(jsonDataRequest.salary*4);\r",
							"});\r",
							"\r",
							"var salary_1_5 = jsonDataResponse.person.u_salary_1_5_year;\r",
							"pm.environment.set(\"salary_1_5\", salary_1_5);\r",
							"\r",
							"// 2) http://162.55.220.72:5005/user_info\r",
							"// req. (RAW JSON)\r",
							"// POST\r",
							"// age: int\r",
							"// salary: int\r",
							"// name: str\r",
							"// auth_token\r",
							"\r",
							"\r",
							"// resp.\r",
							"// {\r",
							"// 'start_qa_salary':salary,\r",
							"//  'qa_salary_after_6_months': salary * 2,\r",
							"//  'qa_salary_after_12_months': salary * 2.9,\r",
							"//  'person': {'u_name':[user_name, salary, age],\r",
							"//                                 'u_age':age,\r",
							"//                                 'u_salary_1.5_year': salary * 4}\r",
							"//   }\r",
							"\r",
							"// Тесты:\r",
							"// 1) Статус код 200\r",
							"// 2) Проверка структуры json в ответе.\r",
							"// 3) В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"// 4) Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user\r",
							"// ===================\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"age\": 24,\r\n\"salary\": 60000,\r\n\"name\": \"Peter\",\r\n\"auth_token\":\"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonDataResponse = pm.response.json();\r",
							"//var jsonDataRequest = pm.request.toJSON();\r",
							"var jsonDataRequest = {};\r",
							"    for (var i = 0; i < \r",
							"        pm.request.body.formdata.toJSON().length; i++){\r",
							"        jsonDataRequest[pm.request.body.formdata.toJSON()[i].key] = pm.request.body.formdata.toJSON()[i].value;\r",
							"    };\r",
							"\r",
							"pm.test(\"TEST Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var schema ={\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"name\",\r",
							"    \"salary\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test('validate schema', function () {\r",
							"    pm.expect(tv4.validate(jsonDataResponse, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test('multiplication check', function  () {\r",
							"       pm.expect(parseInt(jsonDataResponse.salary[0])).to.eql(parseInt(jsonDataRequest.salary));   \r",
							"});\r",
							"\r",
							"pm.test('multiplication check x2', function  () {\r",
							"       pm.expect(parseInt(jsonDataResponse.salary[1])).to.eql(parseInt(jsonDataRequest.salary)*2);   \r",
							"});\r",
							"\r",
							"pm.test('multiplication check x3', function () {\r",
							"    pm.expect(parseInt(jsonDataResponse.salary[2])).to.eql(parseInt(jsonDataRequest.salary)*3);\r",
							"});\r",
							"\r",
							"pm.test(\"salary [2] > [0]\", function () {\r",
							"    pm.expect(parseInt(jsonDataResponse.salary[2])).to.greaterThan(parseInt(jsonDataResponse.salary[0]));\r",
							"});\r",
							"pm.test(\"salary [2] > [1]\", function () {\r",
							"    pm.expect(parseInt(jsonDataResponse.salary[2])).to.greaterThan(parseInt(jsonDataResponse.salary[1]));\r",
							"});\r",
							"\r",
							"// 3) http://162.55.220.72:5005/new_data\r",
							"// req.\r",
							"// POST\r",
							"// age: int\r",
							"// salary: int\r",
							"// name: str\r",
							"// auth_token\r",
							"\r",
							"// Resp.\r",
							"// {'name':name,\r",
							"//   'age': int(age),\r",
							"//   'salary': [salary, str(salary*2), str(salary*3)]}\r",
							"\r",
							"// Тесты:\r",
							"// 1) Статус код 200\r",
							"// 2) Проверка структуры json в ответе.\r",
							"// 3) В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"// 4) проверить, что 2-й элемент массива salary больше 1-го и 0-го"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "24",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "60000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Peter",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonDataResponse = pm.response.json();\r",
							"var jsonDataRequest = pm.request.toJSON();\r",
							"var weight = jsonDataRequest.body.formdata[1].value;\r",
							"pm.environment.set('weight', weight);\r",
							"\r",
							"pm.test(\"TEST Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"daily_food\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"daily_sleep\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"daily_food\",\r",
							"    \"daily_sleep\",\r",
							"    \"name\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test(\"schema test\", function(){\r",
							"    pm.expect(tv4.validate(jsonDataResponse, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"daily_food weight\", function () {\r",
							"    pm.expect(weight*0.012).to.eql(jsonDataResponse.daily_food);\r",
							"    });\r",
							"\r",
							"pm.test(\"daily_sleep weight\", function () {\r",
							"    pm.expect(weight*2.5).to.eql(jsonDataResponse.daily_sleep);\r",
							"    });\r",
							"\r",
							"\r",
							"\r",
							"// 4) http://162.55.220.72:5005/test_pet_info\r",
							"// req.\r",
							"// POST\r",
							"// age: int\r",
							"// weight: int\r",
							"// name: str\r",
							"// auth_token\r",
							"\r",
							"\r",
							"// Resp.\r",
							"// {'name': name,\r",
							"//  'age': age,\r",
							"//  'daily_food':weight * 0.012,\r",
							"//  'daily_sleep': weight * 2.5}\r",
							"\r",
							"\r",
							"// Тесты:\r",
							"// 1) Статус код 200\r",
							"// 2) Проверка структуры json в ответе.\r",
							"// 3) В ответе указаны коэффициенты умножения weight, напишите тесты по проверке правильности результата перемножения на коэффициент."
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "24",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "50",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Peter",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonDataResponse = pm.response.json();\r",
							"// var jsonDataRequest = pm.request.toJSON();\r",
							"var jsonDataRequest = {};\r",
							"    for (var i = 0; i < \r",
							"        pm.request.body.formdata.toJSON().length; i++){\r",
							"        jsonDataRequest[pm.request.body.formdata.toJSON()[i].key] = pm.request.body.formdata.toJSON()[i].value;\r",
							"    };\r",
							"\r",
							"pm.test(\"TEST Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"family\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"children\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"u_salary_1_5_year\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"children\",\r",
							"        \"u_salary_1_5_year\"\r",
							"      ]\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"family\",\r",
							"    \"name\",\r",
							"    \"salary\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test(\"schema test\", function(){\r",
							"    pm.expect(tv4.validate(jsonDataResponse, schema)).to.be.true;\r",
							"});\r",
							" \r",
							"pm.test(\"expect name \", function () {\r",
							"    pm.expect(jsonDataResponse.name).to.eql(pm.environment.get(\"name\"));\r",
							"    // pm.expect(jsonDataResponse.name).to.eql(environment.name);\r",
							"});\r",
							"\r",
							"pm.test(\"expect age \", function () {\r",
							"    pm.expect(jsonDataResponse.age).to.eql(jsonDataRequest.age);\r",
							"});\r",
							"\r",
							"\r",
							"// 5) http://162.55.220.72:5005/get_test_user\r",
							"// req.\r",
							"// POST\r",
							"// age: int\r",
							"// salary: int\r",
							"// name: str\r",
							"// auth_token\r",
							"\r",
							"// Resp.\r",
							"// {'name': name,\r",
							"//  'age':age,\r",
							"//  'salary': salary,\r",
							"//  'family':{'children':[['Alex', 24],['Kate', 12]],\r",
							"//  'u_salary_1.5_year': salary * 4}\r",
							"//   }\r",
							"\r",
							"// Тесты:\r",
							"// 1) Статус код 200\r",
							"// 2) Проверка структуры json в ответе.\r",
							"// 3) Проверить что занчение поля name = значению переменной name из окружения\r",
							"// 4) Проверить что занчение поля age в ответе соответсвует отправленному в запросе значению поля age\r",
							"\r",
							"// pm.test(\"expect name \", function () {\r",
							"//     if (jsonDataResponse.name) {\r",
							"//     // console.warn\r",
							"//     console.info(\"name найдено в ответе\");\r",
							"//     } else {console.error(\"name не найдено в ответе\");\r",
							"//     }\r",
							"//     if (pm.environment.get(\"name\")) {\r",
							"//     console.info(\"name найдено в окружении\");\r",
							"//     } else {console.error(\"name не найдено в окружении\");\r",
							"//     }\r",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "24",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Peter",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonDataResponse = pm.response.json();\r",
							"\r",
							"// 1) Можете взять любой объект из присланного списка, используйте js random.\r",
							"// В объекте возьмите Cur_ID и передать через окружение в следующий запрос.\r",
							"\r",
							"random_number = Math.floor(Math.random() * Object.keys(jsonDataResponse).length);\r",
							"Cur_ID = 0;\r",
							"\r",
							"for (let i in jsonDataResponse) {\r",
							"    if(i==random_number){\r",
							"        Cur_ID = jsonDataResponse[i].Cur_ID;\r",
							"    }\r",
							"}\r",
							"pm.environment.set('Cur_ID', Cur_ID);\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"// Resp. Передаётся список массив объектов.\r",
							"// [\r",
							"// {\"Cur_Abbreviation\": str,\r",
							"//  \"Cur_ID\": int,\r",
							"//  \"Cur_Name\": str\r",
							"// }\r",
							"// …\r",
							"// {\"Cur_Abbreviation\": str,\r",
							"//  \"Cur_ID\": int,\r",
							"//  \"Cur_Name\": str\r",
							"// }\r",
							"// ]\r",
							"\r",
							"// Тесты:\r",
							"// 1) Можете взять любой объект из присланного списка, используйте js random.\r",
							"// В объекте возьмите Cur_ID и передать через окружение в следующий запрос.\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		}
	]
}
